비동기 : 나중에 응답오면 처리   (non-blocking)
           즉 오면 처리한다.(*콜백)


동기 : 응답이 올때 까지 기다린다. (blocking)

-------------------------------------

  	톰캣 -키면 서버올라가고
  
    8080-메인쓰레드 (only listen) -올라감 
                  |
브라우저1 - work1쓰레드
         통신   |
                 |
                 |
브라우저2 -work2쓰레드        
	   ...
-----

 work1쓰레드는 브라우저의 요청을받아서
  1) 요청분석 - 분석한것(url정보와 xml매핑정보보고 객체생성준비) 
  2) 분석한것을 요청?객체(HttpServletRequest)에 담는다
  3) 응답을위한 응답?객체(HttpServletResponse) 생성
  4) 서블릿객체생성 (생성전에 생성되어있는지 확인) -----------(톰캣에 서블릿관리하는컨테이너가있겠지)
  5) 처음생성된 서블릿이면(init으로 초기화한다. -최초 )
  6) 생성된객체에서 service(요청객체,응답객체) 호출한다. 
  7) service( )에서 인자에따라? get인지 post인지 보고 알맞게 응답
  9) response객체에 응답할것담아서 
  10) 브라우저에 보낸다?
  
  11) 같은서블릿 요청이계속 없으면  알고리즘에맞게 객체를메모리에서내림 (삭제)
---
 work2쓰레드  
   1) 
   2)
   3)
   4,5) 이미 work1에서 생성되서 init됐기때문에 init안한다.
   6)
   7)..
  
 *서블릿객체는하나만있음(공유)
   그래서 서블릿객체안에는 인스턴스변수가 있으면안됨 

*
 톰캣이-한번생성된 서블릿이 계속요청이없으면 알맞게 삭제(메모리에서 내림)등 조절하겠지

---------
여기서
 비동기-서블릿이 DAO에서 디비가져오는시간을 기다리면서 놀기때문에 (cpu낭비)
          그냥 기다리지않고 나가버림

         그면 응답은? 다른쓰레드가한다
 
  근데 JDBC가 동기라서 또그게 문제가될수도있다.

  서블릿을이해하면 요즘 뜨는 스프링5등등을 왜쓰는지 이해할수있다.
  스프링도 서블릿기반임

-----------------------------------------------------


 



