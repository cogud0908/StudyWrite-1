-네트워크 소켓이해-  ****소켓 : 즉 TCP/IP 헤더를 완성할수있게 해주는 함수
			   TCP/IP 를 알맞게 넣어줌 함수만 잘쓰면 
 Xshell5

네트워킹 : 네트워크에 연결된 디바이스들 간에 미리 약속된 
             프로토콜을 사용하여 데이터를 "교환"하는것
 
  *그냥 주고받을수는없고 "약속(프로토콜)"이필요

  *패킷단위로 주고받는다.  

  address + Data + Protocol
 
 패킷-------------------------
     부가정보 |   Data    |
     - 헤더 -   - 바디 - 
 --------------------------------            

부가정보 : 보내는주소,받는주소,제어정보,체크섬 등등 
 바디     : 전송할 데이터를 byte 단위로 포함한다. 

 즉 헤더에 TCP/IP가 규약한 정보들이 알맞게 있으면(스펙에)
 보낼 수 있는거지
 
 즉 TCP/IP 패킷을 가지고 돌아다니는 네트워크는 다른 
    TCP/IP 패킷을 쓰는 네트워크로 전송이가능 

*
 이걸 Internet = 대문자 인터넷 (TCP/IP 기반의 데이터교환을 하는 네트워크들의 연결)
       internet = 그냥연결되있는거 노드들이 
--------------------------------
 인터넷의 이해

 인터넷 기반의 서비스

    WWW (인터넷기반의 서비스 중 하나임)

 패킷-------------------------
     부가정보 |   Data    |
     - 헤더 -   - 바디 - 
 --------------------------------           
            
  여기서 헤더부분이 아니라!
  Data, 즉 바디부분이 www(Http) 에 맞게 데이터가 구성이되어있는것이다.

 
 인터넷기반의 서비스  
  www, email, ftp, dns, news...
----------------------------------------------------------------------------------
 OSI 7계층 (open system )
 
 응용       - 데이터만 만드는사람들
------------
 프로토콜  - 프로토콜만?
------------
 하드웨어  -  하드웨어만 

프로토콜(바이트) -> 하드웨어 = 하드웨어는 바이트받아서 전압으로바꾸든뭘하든 해라  

---------------------

 TCP/IP 4계층 

 패킷-------------------------
     부가정보 |   Data    |
     - 헤더 -   - 바디 - 
 --------------------------------    

 응용계층 : 바디부분을채움  
 전송계층 : 헤더부분에 전송관련비트를채움 TCP
 인터넷계층: 주소등 IP관련 비트채움 IP
 링크계층:하드웨어(이더넷등)

----------------------------------------------------

  
응용계층 			 응용계층 : 데이터부분만보고 확인함 
-----------                        --------
TCP계층   TCP		 TCP: 받는데 헤더부분TCP부분보고 확인함                   
-----------		----------
인터넷계층 IP                    인터넷: 받는데 헤더부분주소보고 지꺼아니면 버림 
-----------                       ---------
 링크계층                         링크 
--nic----                          --nic----
    |                                   |
    -------------------------------
                ->보냄데이터

 nic=연결만시키면됨 (유선,무선) - 바이트로들어온걸 이제 유선으로 뭐 보내준다 ..? 
 링크계층    = 헤더|Data| 이패킷을 잘 물리적으로바꿔야함  
 인터넷계층 = 헤더부분의 주소(IP)부분 20바이트정도됨(그걸 잘 채워넣어야지)
 TCP계층    = 헤더부분의 TCP부분을 채움, 또 전송계층이기떄문에 잘전달한다는 것을 보장한다.
  
**순서?: 응용계층 - 데이터패킷을 tcp에 흘린다- TCP헤더채움,- ip헤더채움- 링크계층으로흘림- 유선/무선전송- 받음

 드라이버:각계층간의연결위해?(OS는 이 드라이버를 잘만들어야함) 
* TCP/IP는 OS의소프트웨어로 들어가있다(TCP/IP)? - 그게 소켓이지 (함수로제공해줌), 
 그래서 뭐 ack(긍정응답) 이런걸안해도되지 알아서해주니

--------
 ****소켓 : 즉 TCP/IP 헤더를 완성할수있게 해주는 함수

 게이트웨이 : 공유기역할중하나, 패킷이 인터넷을 쭉지나다니다가 특정네트워크 의공유기타고 들어옴
                 보통 1번으로잡혀있음 (192.168.1.1) 
                네트워크주소(0번)
                    
   							     사설ip 
         외부인터넷--공유기(공인ip,게이트웨이등등 셋팅) ----------------  사설ip
       (패킷돌아다님)           					     사설ip


 패킷은 다이렉트로오는게아니라 라우터들을거쳐서 온다 
 라우터:(경로를 지정해줌) 
------------------
TCP - 연결형
UDP - 비연결형 - connet안함 (스트리밍,멜론이런것? 빨라야하고 조금유실되어도 되는것)
-----------------------------------------------------------------------------------------------------


 대충정리 ( TCP/IP)
  
-TCP/IP패킷 ----------------------
   TCP부분,IP부분 | Data 부분 |
    ~~헤더~~~    ~~바디~~
----------------------------------
 
 응용계층            : 데이터부분완성해서 TCP에게 흘림 
 TCP계층(전송계층):  헤더(TCP부분완성) IP에게 흘림           -   소켓사용
 인터넷계층(ip계층):  헤더(IP부분완성)   링크계층에게 흘림  -    소켓사용 
 링크계층 	: 데이터를 아날로그화? 해서 NiC을통해서(유선/무선) 다른 네트워크로 전달함 

 즉 헤더부분완성을 소켓이하는데 이 소켓을 OS가 함수로제공함
 
-----------------------------------------------------------------------------------------------------
  
 서버/클라이언트 

 request .. 연장 서블릿- 서블릿 - jsp--... 쭉 리퀘스트 
 ------>
 C  /  S
 <----- response 

* 포워드 = request의 연장

================= 
해야할일 

 -TCP-

 1) 1:1 
   c ------ s 

 2) *멀티프로세싱  (클라이언트 여러개 / 서버하나 )

   c    --------
   c   ---------   S                    (쓰레드가필요하겠지)
   c   ---------

 3) web Server    (Http, FTP 등등)

 4)  chatting c/s   ( chatting, protocol ) 

-- 여기까지 tcp로 만든거 ---
================================

 UDP 로 만들어보자 

 1) Time Server 만들기

=================================
 

