ECMAScript
 
 date(함수다타입이아니라?)
 boolean 
 number  
 string    
 function   =>  함수타입 
 object     =>  확장이가능하다  
 	
 (new 또는 리터럴로 가능)  
  리터럴 = 내장객체 
  new  = object타입 = 확장가능 
                 
 **new로만든건 대부분 object타입임 ( 예외, function 타입 - new든아니든 function타입임)
	                                   *array는 리터럴([]) 이든 new든 둘다 object타입임
				a = []  
                                                o = {}	
---------------------------
  
 a = 10  //타입없음?? 
 이런식으로 리터럴로 만들수있고 객체라고보면된다. (내장객체.. 어캐만들어지는지 모름)

 *인터프리터라서
 (동적타이핑  dynamical typing)
  실행중에 변수의 타입을 결정한다.
    타입이 딱정해지지않고 계속바뀐다. - 말이됨? 자바스크립트라서가능 

* 네임스페이스 *
       MAP
    ---------------
    name |  reference
     a     |       -----------> { }   이런식으로 이해해라 
 

즉 변수에 뭐가 저장되는게아니라 이름그자체다? 

*그냥 하나의 변수는 타입바꾸지말고 코딩해라

-------------------------------------
    
 new연산자도 쓴다. = 객체를 직접만들고 싶을때 
 new Number(10)  //객체만듬? no= 함수다. 
	└ 생성자함수          
ex)         
1) My = function(){ ~~ } 
2) new My() // 객체만들어짐 object타입
생성자함수 관례 , 첫글자 대문자 

ex2)
1) My = function( ){
                          this n = 10; 
		  this s = 'hello'
                         } 

2) m = new My() 를하면 

3)  { n       s      }       // { } = object임  
      ↓      ↓ 
     10      'hello'
 
4) m.pi = 3.14  // 확장   

5) { n       s         pi   }       // 이렇게 확장이 됨 - 내장객체는 확장이안됨
      ↓      ↓       ↓
     10      'hello'   3.14

-----------------------------------
 
 var number = new Number(5);  를하면  내부적으로 
 var Number = function(n) { ... }

-----------------------------------

 근데 함수도 타입이라매 new는 어캐씀? 
 
 var f2 = new Function("x","y","return x + y;");  
 var f2 = function(x,y){
		    return x+y; 
		   }
 둘다같다.  둘다 *함수타입임 

 이런걸하겠지   
 { f2 } → { function | prototype }
			  ↘ (프로토타입객체)가있다.??
*함수는 확장을 prototype객체에서 확장해야함


*자바스크립트는 
-------------------------------------------------------------------------------------------

var myVar;               // undefine
var myVar2 = null;     // null 
myVar == myVar2     // true
myVar === myVar2   // false  ===은 타입까지검사해준다.

//그냥 형변환해서 엄격하게 타입을맞춰라 .. 



------------------------------------------------------------
-- 정리 --

1.객체(오브젝트 타입) 생성방법
//Object() - 생성함수와 new키워드를 사용하는방법
var o1 = new Object();
o1.name = "둘리";
o1.age = 10; 

2.객체(오브젝트 타입) 생성방법
//리터럴
var o2 = {}
o2.name = "마이콜";
o2.age= 20;

3.객체(오브젝트 타입) 생성방법
//JSON = JavaScriptObjectNotation
var o3 = {
	name:"뚜치",  //구문이아님= 실행되는라인이아니니깐 : 를쓴다.
	age:20
};

팁*
 자바에서 {name:"또치", age:20} 이런걸만들어서 js한테 보내줌
 자바스크립트에서 response로 받아서 eval에 넣어주면 
 o = eval(response); //객체가튀어나옴
 o = 객체 

이렇게 통신가능 


4.객체(오브젝트 타입) 생성방법
//(커스텀)생성함수사용
var MyObject = function(name,age){
	this.name= name;
	this.age = age;
}
var o4 = new MyObject("도우넛",13);